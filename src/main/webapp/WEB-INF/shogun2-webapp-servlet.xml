<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- This tag registers the DefaultAnnotationHandlerMapping and AnnotationMethodHandlerAdapter
        beans that are required for Spring MVC -->
    <mvc:annotation-driven
        content-negotiation-manager="contentNegotiationManager">
        <!-- Use customized Jackson/JSON Object Mapper, e.g. for a nicer joda date
            serialization -->
        <mvc:message-converters>
            <beans:bean
                class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
            </beans:bean>
            <beans:bean
                class="org.springframework.http.converter.StringHttpMessageConverter">
                <beans:property name="writeAcceptCharset" value="false" />
            </beans:bean>
            <beans:bean
                class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <beans:property name="objectMapper" ref="jacksonObjectMapper" />
            </beans:bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- Use this bean (referenced above) to map our .action extension to the
        application/json mime type. This is necessary since Spring 4.2.2 See: https://pivotal.io/security/cve-2015-5211
        TODO: We should discuss, if this is really what we want. -->
    <beans:bean id="contentNegotiationManager"
        class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <beans:property name="mediaTypes">
            <beans:value>
                action=application/json
            </beans:value>
        </beans:property>
    </beans:bean>

    <annotation-config />

    <beans:bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <beans:property name="alwaysUseFullPath" value="true"/>
    </beans:bean>

    <!-- We configured the DispatcherServlet with the mapping "/", but we want
     all requests to static resources (e.g., *.js or *.css) mapped to the
     DefaultServlet -->
    <mvc:default-servlet-handler />

    <mvc:interceptors>
        <mvc:interceptor>
            <!-- set cache headers for static resources -->
            <mvc:mapping path="/lib/**"/>
            <mvc:mapping path="/admin/build/**"/>
            <mvc:mapping path="/admin/resources/**"/>
            <mvc:mapping path="/client/build/**"/>
            <mvc:mapping path="/client/resources/**"/>
            <mvc:mapping path="/login/build/**"/>
            <mvc:mapping path="/login/resources/**"/>

            <!-- set cache headers for file and image controllers -->
            <mvc:mapping path="/image/**"/>
            <mvc:mapping path="/file/**"/>
            <beans:bean class="org.springframework.web.servlet.mvc.WebContentInterceptor">
                <beans:property name="cacheSeconds" value="86400" /> <!-- 1 day -->
                <beans:property name="useExpiresHeader" value="true"/>
                <beans:property name="useCacheControlHeader" value="true"/>
                <beans:property name="useCacheControlNoStore" value="true"/>
            </beans:bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <beans:bean id="jacksonObjectMapper"
        class="de.terrestris.shogun2.util.json.Shogun2JsonObjectMapper" />

    <component-scan base-package="de.terrestris.*.rest, de.terrestris.*.web"
        use-default-filters="false">
        <include-filter expression="org.springframework.stereotype.Controller"
            type="annotation" />
    </component-scan>

</beans:beans>