<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- ******************************************************************* -->
    <!-- ******************************************************************* -->
    <!-- **************************  TEMPLATES  **************************** -->
    <!-- ******************************************************************* -->
    <!-- ******************************************************************* -->

    <!-- The following beans are templates (usually with scope=prototype)
                    for the creation of new instances, e.g. applications -->

    <bean id="templateViewportModule" class="de.terrestris.shogun2.model.module.CompositeModule" scope="prototype">
        <property name="name" value="Viewport" />
        <property name="layout" ref="borderLayout" />
        <property name="subModules">
            <util:list value-type="de.terrestris.shogun2.model.module.Module">
                <ref bean="templateMapContainer" />
                <ref bean="templateHeaderModule" />
                <ref bean="templateLayerTreeModule" />
            </util:list>
        </property>
    </bean>

    <!-- Template application -->
    <bean id="templateApplication" class="de.terrestris.appshogun.model.ProjectApplication" scope="prototype">
        <property name="name" value="Template Application" />
        <property name="open" value="false" />
        <property name="theme" value="classic" />
        <property name="viewport" ref="templateViewportModule" />
    </bean>

    <!-- Template TileWMS Layer -->
    <bean id="templateWmsLayerTileGridExtent" class="de.terrestris.shogun2.model.layer.util.Extent" scope="prototype">
        <property name="lowerLeft">
            <bean class="java.awt.geom.Point2D$Double">
                <constructor-arg index="0" value="-20026376.39" />
                <constructor-arg index="1" value="-20048966.10" />
            </bean>
        </property>
        <property name="upperRight">
            <bean class="java.awt.geom.Point2D$Double">
                <constructor-arg index="0" value="20026376.39" />
                <constructor-arg index="1" value="20048966.10" />
            </bean>
        </property>
    </bean>

    <!-- The Resolutions -->
    <bean id="templateRes01" class="java.lang.Double" scope="prototype">
        <constructor-arg value="156543.03390625"></constructor-arg>
    </bean>
    <bean id="templateRes02" class="java.lang.Double" scope="prototype">
        <constructor-arg value="78271.516953125"></constructor-arg>
    </bean>
    <bean id="templateRes03" class="java.lang.Double" scope="prototype">
        <constructor-arg value="39135.7584765625"></constructor-arg>
    </bean>
    <bean id="templateRes04" class="java.lang.Double" scope="prototype">
        <constructor-arg value="19567.87923828125"></constructor-arg>
    </bean>
    <bean id="templateRes05" class="java.lang.Double" scope="prototype">
        <constructor-arg value="9783.939619140625"></constructor-arg>
    </bean>
    <bean id="templateRes06" class="java.lang.Double" scope="prototype">
        <constructor-arg value="4891.9698095703125"></constructor-arg>
    </bean>
    <bean id="templateRes07" class="java.lang.Double" scope="prototype">
        <constructor-arg value="2445.9849047851562"></constructor-arg>
    </bean>
    <bean id="templateRes08" class="java.lang.Double" scope="prototype">
        <constructor-arg value="1222.9924523925781"></constructor-arg>
    </bean>
    <bean id="templateRes09" class="java.lang.Double" scope="prototype">
        <constructor-arg value="611.4962261962891"></constructor-arg>
    </bean>
    <bean id="templateRes10" class="java.lang.Double" scope="prototype">
        <constructor-arg value="305.74811309814453"></constructor-arg>
    </bean>
    <bean id="templateRes11" class="java.lang.Double" scope="prototype">
        <constructor-arg value="152.87405654907226"></constructor-arg>
    </bean>
    <bean id="templateRes12" class="java.lang.Double" scope="prototype">
        <constructor-arg value="76.43702827453613"></constructor-arg>
    </bean>
    <bean id="templateRes13" class="java.lang.Double" scope="prototype">
        <constructor-arg value="38.218514137268066"></constructor-arg>
    </bean>
    <bean id="templateRes14" class="java.lang.Double" scope="prototype">
        <constructor-arg value="19.109257068634033"></constructor-arg>
    </bean>
    <bean id="templateRes15" class="java.lang.Double" scope="prototype">
        <constructor-arg value="9.554628534317017"></constructor-arg>
    </bean>
    <bean id="templateRes16" class="java.lang.Double" scope="prototype">
        <constructor-arg value="4.777314267158508"></constructor-arg>
    </bean>
    <bean id="templateRes17" class="java.lang.Double" scope="prototype">
        <constructor-arg value="2.388657133579254"></constructor-arg>
    </bean>
    <bean id="templateRes18" class="java.lang.Double" scope="prototype">
        <constructor-arg value="1.194328566789627"></constructor-arg>
    </bean>
    <bean id="templateRes19" class="java.lang.Double" scope="prototype">
        <constructor-arg value="0.5971642833948135"></constructor-arg>
    </bean>

    <util:list id="templateResolutions" value-type="java.lang.Double" scope="prototype">
        <ref bean="templateRes01" />
        <ref bean="templateRes02" />
        <ref bean="templateRes03" />
        <ref bean="templateRes04" />
        <ref bean="templateRes05" />
        <ref bean="templateRes06" />
        <ref bean="templateRes07" />
        <ref bean="templateRes08" />
        <ref bean="templateRes09" />
        <ref bean="templateRes10" />
        <ref bean="templateRes11" />
        <ref bean="templateRes12" />
        <ref bean="templateRes13" />
        <ref bean="templateRes14" />
        <ref bean="templateRes15" />
        <ref bean="templateRes16" />
        <ref bean="templateRes17" />
        <ref bean="templateRes18" />
        <ref bean="templateRes19" />
    </util:list>

    <bean id="templateWmsLayerTileGrid" class="de.terrestris.shogun2.model.layer.util.TileGrid" scope="prototype">
        <property name="type" value="TileGrid" />
        <property name="tileGridOrigin">
            <bean class="java.awt.geom.Point2D$Double">
                <constructor-arg index="0" value="0" />
                <constructor-arg index="1" value="0" />
            </bean>
        </property>
        <property name="tileGridExtent" ref="templateWmsLayerTileGridExtent" />
        <property name="tileSize" value="256" />
        <property name="tileGridResolutions" ref="templateResolutions" />
    </bean>

    <bean id="templateTileWMSDataSource" class="de.terrestris.shogun2.model.layer.source.TileWmsLayerDataSource" scope="prototype">
        <property name="type" value="TileWMS" />
        <property name="width" value="256" />
        <property name="height" value="256" />
        <property name="version" value="1.1.0" />
        <property name="tileGrid" ref="templateWmsLayerTileGrid" />
    </bean>

    <bean id="templateLayerAppearance" class="de.terrestris.shogun2.model.layer.appearance.LayerAppearance" scope="prototype">
        <property name="maxResolution" ref="templateRes01" />
        <property name="minResolution" ref="templateRes19" />
        <property name="opacity" value="1" />
        <property name="visible" value="true" />
    </bean>

    <bean id="templateTileWMSLayer" class="de.terrestris.appshogun.model.ProjectLayer" scope="prototype">
<!--         <property name="type" value="Tile" /> -->
        <property name="source" ref="templateTileWMSDataSource" />
        <property name="appearance" ref="templateLayerAppearance" />
    </bean>

    <bean id="templateMap" class="de.terrestris.shogun2.model.module.Map" scope="prototype">
        <property name="xtype" value="shogun-component-map" />
        <property name="mapLayers">
            <util:list>
                <ref bean="osmWmsLayer" />
            </util:list>
        </property>
        <property name="properties">
             <util:map>
                <entry key="x" value="0" />
                <entry key="y" value="0" />
                <entry key="width" value="100%" />
                <entry key="height" value="100%" />
            </util:map>
        </property>
    </bean>

    <bean id="templateMapContainer" class="de.terrestris.shogun2.model.module.CompositeModule" scope="prototype">
        <property name="name" value="Map Container" />
        <property name="xtype" value="container" />
        <property name="properties">
            <util:map>
                <entry key="width" value="100%" />
                <entry key="height" value="100%" />
                <entry key="collapsible" value="false" />
                <entry key="split" value="true" />
                <entry key="region" value="center" />
            </util:map>
        </property>
    </bean>

    <bean id="templateMaxExtent" class="de.terrestris.shogun2.model.layer.util.Extent" scope="prototype">
        <property name="lowerLeft">
            <bean class="java.awt.geom.Point2D$Double">
                <constructor-arg index="0" value="-20026376.39" />
                <constructor-arg index="1" value="-20048966.10" />
            </bean>
        </property>
        <property name="upperRight">
            <bean class="java.awt.geom.Point2D$Double">
                <constructor-arg index="0" value="20026376.39" />
                <constructor-arg index="1" value="20048966.10" />
            </bean>
        </property>
    </bean>

</beans>